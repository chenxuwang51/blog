{
    "version": "https://jsonfeed.org/version/1",
    "title": "王晨旭的技术博客",
    "description": "",
    "home_page_url": "https://github.com/chenxuwang51/blog",
    "items": [
        {
            "id": "https://github.com/chenxuwang51/blog/2021/05/06/%E8%A7%A3%E9%87%8A%E5%99%A8/",
            "url": "https://github.com/chenxuwang51/blog/2021/05/06/%E8%A7%A3%E9%87%8A%E5%99%A8/",
            "title": "解释器",
            "date_published": "2021-05-05T23:59:06.000Z",
            "content_html": "<!---->\n<span id=\"more\"></span>\n<h3 id=\"解释器定义\"><a class=\"markdownIt-Anchor\" href=\"#解释器定义\">#</a> 解释器定义</h3>\n<p>解释器（Interpreter），又译为直译器，是一种电脑程序，能够把高级<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQkMlOTYlRTclQTglOEIlRTglQUYlQUQlRTglQTglODA=\">编程语言</span>一行一行直接转译运行。解释器不会一次把整个程序转译出来，只像一位 “中间人”，每次运行程序时都要先转成另一种语言再作运行，因此解释器的程序运行速度比较缓慢。它每转译一行程序叙述就立刻运行，然后再转译下一行，再运行，如此不停地进行下去。</p>\n<p><strong>Python 是一门解释器语言，代码想运行，必须通过解释器执行，Python 存在多种解释器，分别基于不同的语言开发，每个解释器都有不同的特点。</strong></p>\n<ul>\n<li>\n<p>CPython</p>\n<p>Python 的默认解释器，是使用 C 语言开发的，所以叫 CPython，也是使用最广的。</p>\n</li>\n<li>\n<p>IPython</p>\n<p>是基于 CPython 之上的一个交互式解释器，只是在交互上有所增强。</p>\n</li>\n<li>\n<p>PyPy</p>\n<p>对 Python 代码进行动态编译，显著提高 Python 代码的执行速度</p>\n</li>\n</ul>\n<h3 id=\"gil全局解释器锁\"><a class=\"markdownIt-Anchor\" href=\"#gil全局解释器锁\">#</a> GIL 全局解释器锁</h3>\n<p>保证同一时刻只有一个线程对资源有操作权限（使用 CPU），相当于是单线程执行，它也是 CPython 解释器的特性，所以 Python 也是被人诟病说是伪多线程。</p>\n<p><strong>如何避免</strong></p>\n<p>可以使用多进程或者协程，或者换解释器，例如 PyPy。</p>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/04/27/python%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6/",
            "url": "https://github.com/chenxuwang51/blog/2021/04/27/python%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6/",
            "title": "python内存管理机制",
            "date_published": "2021-04-27T01:21:03.000Z",
            "content_html": "<!---->\n<span id=\"more\"></span>\n<p><strong>内存管理</strong></p>\n<p>Python 有一个私有的堆空间来保存所有的对象和数据结构，我们无法访问它，是由解释器在管理。</p>\n<p><strong>对象存储</strong></p>\n<p>在 Python 中，万物皆对象，每一个对象第一次被创建时都会在内存中开辟一块空间来存储。</p>\n<p><strong>引用计数</strong></p>\n<p>每创建一个对象，对应的引用为 1。如果这个对象被赋值或引用时，对应的引用计数 + 1，如果被销毁，引用计数 - 1. 若该对象的引用计数为 0 时，对象会自动销毁。</p>\n<p><strong>循环引用</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a_list = []</span><br><span class=\"line\">b_list = []</span><br><span class=\"line\">a_list.append(b_list)</span><br><span class=\"line\">b_list.append(a_list)</span><br></pre></td></tr></table></figure>\n<p>a_list 与 b_list 相互引用，如果不存在其他对象对他们的引用。a_list 与 b_list 的引用计数也仍然为 1，所占用的内存永远无法被回收，这将是致命的。</p>\n<p><strong>标记・清除</strong></p>\n<p>标记清除机制其实就是为了解决 循环引用问题的，首先遍历所有对象，如果对象除了循环引用外还有别的引用，说明其有效，就标记为存在，如果不存在，则对其进行清除。</p>\n<p><strong>分代回收</strong></p>\n<p>这种机制是典型的以空间换时间的技术。当对象被创建时标记为第 0 代，经过一次垃圾回收后，余下的对象被标记为第 1 代，最高为第 2 代。0 代触发将清理所有 3 代，1 代触发会清理 1,2 代，2 代触发后只会清理自己。</p>\n<p>也就是说：对象存在的时间越长，越可能不是垃圾，应该越少去收集。</p>\n<p><strong>对象缓存</strong></p>\n<p>类型值的内置数据类型，数字，字符串，列表，字典等都会有自己的对象缓存池，这样做可以避免频繁的申请内存，释放内存，但是会极大的降低应用程序的运行速度，还会造成大量的碎片。因此提供对象缓存机制是非常必要的。</p>\n<p><strong>多次赋值</strong></p>\n<p>对于整数和较短的字符，Python 会进行缓存，不会创建多个相同对象。</p>\n<p>此时被多次赋值，只会有多份引用。</p>\n<p><strong>内存地址</strong></p>\n<p>可以通过 id () 来查看</p>\n<p>a is b 判断 a 对象是否就是 b 对象（通过 id 来判断）</p>\n<p>a == b 判断 a 对象的值是否和 b 对象的值相等（通过 value 来判断）</p>\n<p><strong>内存占用</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sys.getsizeof(a)</span><br></pre></td></tr></table></figure>\n<p><strong>查看引用计数</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sys.getrefcount(a)</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/03/30/git%E5%88%86%E6%94%AF/",
            "url": "https://github.com/chenxuwang51/blog/2021/03/30/git%E5%88%86%E6%94%AF/",
            "title": "git分支",
            "date_published": "2021-03-30T12:10:06.000Z",
            "content_html": "<!---->\n<span id=\"more\"></span>\n<ul>\n<li><strong>首先在 gitee.com 创建一个新的仓库，在选择分支类型时选支持 master/develop 类型分支</strong></li>\n<li>新建一个 Django 项目 git init 初始化</li>\n<li>素质三连提交至刚才新建的 git 仓库中，注意第一次上传需要建立远程关系：git remote add origin <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vJUU4JUI3JUFGJUU1JUJFJTg0JUU1JTkwJThELyVFNCVCQiU5MyVFNSVCQSU5MyVFNSU5MCU4RC5naXQ=\">https://gitee.com/ 路径名 / 仓库名.git</span></li>\n</ul>\n<p>上传成功后，去仓库查看分支，可以看到默认的分支是 master，点击新建分支，新建一个开发分支 develop</p>\n<p>在项目地址打开命名行</p>\n<ul>\n<li>\n<p>查看所有分支，* 号指示当前所在的分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -a</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查看云端分支 (remotes)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -r</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>切换分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout develop</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>合并分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/03/21/MongoDB%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/",
            "url": "https://github.com/chenxuwang51/blog/2021/03/21/MongoDB%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/",
            "title": "MongoDB基础命令",
            "date_published": "2021-03-21T12:32:44.000Z",
            "content_html": "<!---->\n<span id=\"more\"></span>\n<p><strong>MongoDB 官网</strong> ：  <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9uZ29kYi5jb20v\">https://www.mongodb.com/</span></p>\n<p>前往官网下载并安装 mongodb</p>\n<ul>\n<li>\n<h2 id=\"启动mongo服务\"><a class=\"markdownIt-Anchor\" href=\"#启动mongo服务\">#</a> 启动 mongo 服务</h2>\n</li>\n<li>\n<p>运行脚本 <code>./mongod</code>  可以通过 <code>-dbpath</code>  来指定数据库路径</p>\n</li>\n</ul>\n<p><img data-src=\"F:%5C%E5%AD%A6%E4%B9%A0%5Cpractical_training%5C%E6%88%AA%E5%9B%BE%5Cm1.png\" alt=\"\"></p>\n<p>从日志上可以看到 mongo 服务的默认配置信息，还可一看到每一个连接到 mongo 服务的客户端的信息，已经客户端操作信息</p>\n<ul>\n<li>\n<h2 id=\"连接mongo服务\"><a class=\"markdownIt-Anchor\" href=\"#连接mongo服务\">#</a> 连接 mongo 服务</h2>\n<p>运行脚本./mongo</p>\n<p><img data-src=\"F:%5C%E5%AD%A6%E4%B9%A0%5Cpractical_training%5C%E6%88%AA%E5%9B%BE%5Cm2.png\" alt=\"\"></p>\n</li>\n<li>\n<h2 id=\"mongodb命令\"><a class=\"markdownIt-Anchor\" href=\"#mongodb命令\">#</a> MongoDB 命令</h2>\n</li>\n<li>\n<p>创建数据库，执行命令 <code>use db_name</code> , 如果 db_name 不存在、则创建一个数据库，存在则直接连接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use db_name</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查看所有数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show dbs</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查看当前所在数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>删除当前数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.dropDatabase()</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>创建数据集，name：数据集参数；options：为可选项，如下表</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.createCollection(&quot;name&quot;, [options])</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">字段\t类型\t描述</span><br><span class=\"line\">capped\t布尔\t如果为 true，则创建固定集合。固定集合是指有着固定大小的集合，当达到最大值时，它会自动覆盖最早的文档。当该值为 true 时，必须指定 size 参数。</span><br><span class=\"line\">size\t数值\t为固定集合指定一个最大值（以字节计）。如果 capped 为 true，也需要指定该字段。</span><br><span class=\"line\">max\t数值\t指定固定集合中包含文档的最大数量</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查看所有数据集</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show collections</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>数据集插入数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.insert(&lt;document&gt;)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>数据集查询</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.find([query])  基础查询</span><br><span class=\"line\">db.&lt;name&gt;.find([query]).pretty()  格式化查询结果</span><br><span class=\"line\">db.&lt;name&gt;.find([query]).limit(&lt;number&gt;)  限制查询结果条数</span><br><span class=\"line\">db.&lt;name&gt;.find([query]).skip(&lt;number&gt;)   跳过查询结果条数</span><br><span class=\"line\">db.&lt;name&gt;.find([query]).sort(&#123;&lt;key&gt;:&lt;value&gt;)  对查询结果按排序，value为1对key升序、为-1对key降序</span><br><span class=\"line\">pretty、limit、skip、sort可以一起使用，执行顺序为skip-&gt;limit-&gt;sort-&gt;pretty</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>删除数据集</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.集合名.drop()</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>更新数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.collection.updateOne(&lt;query&gt;, &lt;update&gt;, &lt;options&gt;)</span><br><span class=\"line\">db.collection.updateMany(&lt;query&gt;, &lt;update&gt;, &lt;options&gt;)</span><br><span class=\"line\">db.collection.replaceOne(&lt;query&gt;, &lt;replacement&gt;, &lt;options&gt;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/03/18/%E4%B8%83%E7%89%9B%E4%BA%91%E4%B8%8A%E4%BC%A0/",
            "url": "https://github.com/chenxuwang51/blog/2021/03/18/%E4%B8%83%E7%89%9B%E4%BA%91%E4%B8%8A%E4%BC%A0/",
            "title": "七牛云上传",
            "date_published": "2021-03-18T13:41:56.000Z",
            "content_html": "<!---->\n<span id=\"more\"></span>\n<ul>\n<li>\n<p>使用七牛云上传文件，首先登录七牛云，进入个人中心拿到 AccessKey 和 SecretKey，注意：新用户需要先注册七牛云。</p>\n</li>\n<li>\n<p>创建一个存储空间，并记录域名<img data-src=\"F:%5C%E5%AD%A6%E4%B9%A0%5Cpractical_training%5C%E6%88%AA%E5%9B%BE%5Csnipaste20210318_214756.png\" alt=\"\"></p>\n</li>\n<li>\n<p>django 需要写一个接口来接受七牛云返回给我们的 token, 前提是先安装上七牛云的三方包，该接口在创建完成后可以测试查看是否能湖区到七牛云的 token 信息</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 七牛云token</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> qiniu <span class=\"keyword\">import</span> Auth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QiNiu</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        q = Auth(<span class=\"string\">&#x27;iG6sF5yE9V6LFwRZIPJ5sM6cWW3upbZT_7obaXAt&#x27;</span>, <span class=\"string\">&#x27;LyrAaxGmYcPiAKeR5xIVp8LokyS_pw5W9ENjMoyk&#x27;</span>)</span><br><span class=\"line\">        token = q.upload_token(<span class=\"string\">&#x27;redinnovation&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(token)</span><br><span class=\"line\">        res = &#123;&#125;</span><br><span class=\"line\">        res[<span class=\"string\">&#x27;uptoken&#x27;</span>] = token</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(res)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>然后在 vue 中连接 Django 的端口，使用 token，结合前端空间完成文件上传</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">get_token</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">         <span class=\"built_in\">this</span>.axios.get(<span class=\"string\">&#x27;http://localhost:8000/uptoken/&#x27;</span>).then(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(result);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.uptoken = result.data.uptoken;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/03/03/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",
            "url": "https://github.com/chenxuwang51/blog/2021/03/03/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",
            "title": "docker常用命令",
            "date_published": "2021-03-03T01:54:39.000Z",
            "content_html": "<!-- -->\n<span id=\"more\"></span>\n<p>Docker 三大核心: <strong>容器，镜像，仓库</strong></p>\n<p>容器依赖于镜像，仓库类似于 (上传到百度云，git 等)</p>\n<ul>\n<li>\n<p>显示 Docker 系统信息，包括镜像和容器数</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查看本地已拥有的镜像</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>拉取所需要的镜像</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull redis(镜像名称)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>将 images 中所显示的镜像下载到本地文件夹</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker save -o <span class=\"string\">&#x27;c:/tmp/redis.tar&#x27;</span> redis</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>将本地的镜像下载到 Docker</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker load -i <span class=\"string\">&#x27;c:/tmp/redis.tar&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>根据 docker images 中所显示的 IMAGE ID 删除镜像</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi -f 镜像ID</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>显示正在运行中的容器</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>显示所有容器</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>结束正在运行中的容器</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop 容器ID</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>根据容器 ID 运行对应容器</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start 容器ID</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>根据容器 ID 删除对应的容器，容器 ID 是 docker ps 中的 CONTAINER ID</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm 容器ID</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>获取本机所分配的 IP（如果使用的是 dockerdesktop，连接时则使用本机 IP 地址 127.0.0.1）</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-machine ip default</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>运行指定的容器 (redis)  6380:6379 (指定端口号，如本机已经安装有 Redis，错开默认的端口)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 6380:6379 redis</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>连接已启动容器的 redis</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli -h <span class=\"number\">127.0</span>.<span class=\"number\">0.1</span> -p <span class=\"number\">6380</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/03/01/Vue/",
            "url": "https://github.com/chenxuwang51/blog/2021/03/01/Vue/",
            "title": "Ant Design of Vue",
            "date_published": "2021-03-01T12:04:17.000Z",
            "content_html": "<!---->\n<span id=\"more\"></span>\n<p>Ant Design of Vue 官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW50ZHYuY29tL2RvY3MvdnVlL2ludHJvZHVjZS1jbi8=\">https://www.antdv.com/docs/vue/introduce-cn/</span></p>\n<p>特性</p>\n<ul>\n<li>提炼自企业级中后台产品的交互语言和视觉风格。</li>\n<li>开箱即用的高质量 Vue 组件。</li>\n<li>共享 Ant Design of React 设计工具体系。</li>\n</ul>\n<p>下载组件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm i --save ant-design-vue</span><br></pre></td></tr></table></figure>\n<p>全局引入组件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Antd <span class=\"keyword\">from</span> <span class=\"string\">&#x27;ant-design-vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;ant-design-vue/dist/antd.css&#x27;</span>;</span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Antd);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* eslint-disable no-new */</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">&#x27;&lt;App/&gt;&#x27;</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>部分组件</p>\n<p><strong>Button 按钮</strong></p>\n<p>按钮有五种类型：主按钮、次按钮、虚线按钮、危险按钮和链接按钮。主按钮在同一个操作区域最多出现一次。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;a-button type=<span class=\"string\">&quot;primary&quot;</span>&gt;</span><br><span class=\"line\">      Primary</span><br><span class=\"line\">    &lt;/a-button&gt;</span><br><span class=\"line\">    &lt;a-button&gt;Default&lt;/a-button&gt;</span><br><span class=\"line\">    &lt;a-button type=<span class=\"string\">&quot;dashed&quot;</span>&gt;</span><br><span class=\"line\">      Dashed</span><br><span class=\"line\">    &lt;/a-button&gt;</span><br><span class=\"line\">    &lt;a-button type=<span class=\"string\">&quot;danger&quot;</span>&gt;</span><br><span class=\"line\">      Danger</span><br><span class=\"line\">    &lt;/a-button&gt;</span><br><span class=\"line\">    &lt;a-config-provider :auto-insert-space-<span class=\"keyword\">in</span>-button=<span class=\"string\">&quot;false&quot;</span>&gt;</span><br><span class=\"line\">      &lt;a-button type=<span class=\"string\">&quot;primary&quot;</span>&gt;</span><br><span class=\"line\">        按钮</span><br><span class=\"line\">      &lt;/a-button&gt;</span><br><span class=\"line\">    &lt;/a-config-provider&gt;</span><br><span class=\"line\">    &lt;a-button type=<span class=\"string\">&quot;primary&quot;</span>&gt;</span><br><span class=\"line\">      按钮</span><br><span class=\"line\">    &lt;/a-button&gt;</span><br><span class=\"line\">    &lt;a-button type=<span class=\"string\">&quot;link&quot;</span>&gt;</span><br><span class=\"line\">      Link</span><br><span class=\"line\">    &lt;/a-button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>下拉菜单</strong></p>\n<p>向下弹出的列表。</p>\n<p>使用场景：当页面上的操作命令过多时，用此组件可以收纳操作元素。点击或移入触点，会出现一个下拉菜单。可在列表中进行选择，并执行相应的命令。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;a-dropdown&gt;</span><br><span class=\"line\">    &lt;a <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;ant-dropdown-link&quot;</span> @click=<span class=\"string\">&quot;e =&gt; e.preventDefault()&quot;</span>&gt;</span><br><span class=\"line\">      Hover me &lt;a-icon type=<span class=\"string\">&quot;down&quot;</span> /&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">    &lt;a-menu slot=<span class=\"string\">&quot;overlay&quot;</span>&gt;</span><br><span class=\"line\">      &lt;a-menu-item&gt;</span><br><span class=\"line\">        &lt;a href=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;1st menu item&lt;/a&gt;</span><br><span class=\"line\">      &lt;/a-menu-item&gt;</span><br><span class=\"line\">      &lt;a-menu-item&gt;</span><br><span class=\"line\">        &lt;a href=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;2nd menu item&lt;/a&gt;</span><br><span class=\"line\">      &lt;/a-menu-item&gt;</span><br><span class=\"line\">      &lt;a-menu-item&gt;</span><br><span class=\"line\">        &lt;a href=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;3rd menu item&lt;/a&gt;</span><br><span class=\"line\">      &lt;/a-menu-item&gt;</span><br><span class=\"line\">    &lt;/a-menu&gt;</span><br><span class=\"line\">  &lt;/a-dropdown&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>Pagination 分页</strong></p>\n<p>采用分页的形式分隔长列表，每次只加载一个页面。</p>\n<p>使用场景：</p>\n<ul>\n<li>当加载 / 渲染所有数据将花费很多时间时；</li>\n<li>可切换页码浏览数据。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;a-pagination show-quick-jumper :<span class=\"keyword\">default</span>-current=<span class=\"string\">&quot;2&quot;</span> :total=<span class=\"string\">&quot;500&quot;</span> @change=<span class=\"string\">&quot;onChange&quot;</span> /&gt;</span><br><span class=\"line\">    &lt;br /&gt;</span><br><span class=\"line\">    &lt;a-pagination</span><br><span class=\"line\">      show-quick-jumper</span><br><span class=\"line\">      :<span class=\"keyword\">default</span>-current=<span class=\"string\">&quot;2&quot;</span></span><br><span class=\"line\">      :total=<span class=\"string\">&quot;500&quot;</span></span><br><span class=\"line\">      disabled</span><br><span class=\"line\">      show-less-items</span><br><span class=\"line\">      @change=<span class=\"string\">&quot;onChange&quot;</span></span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">onChange</span>(<span class=\"params\">pageNumber</span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Page: &#x27;</span>, pageNumber);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>Input 输入框</strong></p>\n<p>通过鼠标或键盘输入内容，是最基础的表单域的包装。</p>\n<p>使用场景：</p>\n<ul>\n<li>需要用户输入表单域内容时。</li>\n<li>提供组合型输入框，带搜索的输入框，还可以进行大小选择。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;a-input placeholder=<span class=\"string\">&quot;Basic usage&quot;</span> /&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/01/21/%E9%A1%B5%E9%9D%A2%E8%A7%86%E9%A2%91%E7%94%BB%E4%B8%AD%E7%94%BB%E5%8A%9F%E8%83%BD/",
            "url": "https://github.com/chenxuwang51/blog/2021/01/21/%E9%A1%B5%E9%9D%A2%E8%A7%86%E9%A2%91%E7%94%BB%E4%B8%AD%E7%94%BB%E5%8A%9F%E8%83%BD/",
            "title": "页面视频画中画功能",
            "date_published": "2021-01-21T11:52:44.000Z",
            "content_html": "<!---->\n<span id=\"more\"></span>\n<p>前言：在 vue 中显示视频，默认无法失焦进行其他操作，这时可以使用画中画功能弥补缺陷。</p>\n<ul>\n<li>\n<p>视频标签及其中属性，注意 src 绑定的是一个变量</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;video</span><br><span class=\"line\">      id=<span class=\"string\">&quot;video&quot;</span></span><br><span class=\"line\">      width=<span class=\"string\">&quot;300&quot;</span></span><br><span class=\"line\">      height=<span class=\"string\">&quot;230&quot;</span></span><br><span class=\"line\">      :src=<span class=\"string\">&quot;src&quot;</span></span><br><span class=\"line\">      controls=<span class=\"string\">&quot;controls&quot;</span></span><br><span class=\"line\">      autoplay=<span class=\"string\">&quot;autoplay&quot;</span></span><br><span class=\"line\">      muted</span><br><span class=\"line\">    &gt;&lt;/video&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>调用按钮</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;van-button @click=<span class=\"string\">&quot;into&quot;</span>&gt;&#123;&#123; btn_msg &#125;&#125;画中画&lt;/van-button&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      src: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">      btn_msg: <span class=\"string\">&quot;进入&quot;</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    <span class=\"comment\">//画中画功能，使用vue中的pictureInPictureElement组件</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">into</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//判断video标签是否已经是画中画模式，如果不是，就使用画中画组件</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (video !== <span class=\"built_in\">document</span>.pictureInPictureElement) &#123;</span><br><span class=\"line\">        video.requestPictureInPicture();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.btn_msg = <span class=\"string\">&quot;退出&quot;</span>;</span><br><span class=\"line\">      &#125; </span><br><span class=\"line\">      <span class=\"comment\">//如果已经是则退出画中画模式</span></span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.exitPictureInPicture();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.btn_msg = <span class=\"string\">&quot;进入&quot;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/01/20/%E5%88%86%E9%A1%B5/",
            "url": "https://github.com/chenxuwang51/blog/2021/01/20/%E5%88%86%E9%A1%B5/",
            "title": "分页",
            "date_published": "2021-01-20T10:58:42.000Z",
            "content_html": "<!---->\n<span id=\"more\"></span>\n<ul>\n<li>分页展示数据后端接口</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 课程列表页接口</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CourseList</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取前端传递的当前页</span></span><br><span class=\"line\">        page = <span class=\"built_in\">int</span>(request.GET.get(<span class=\"string\">&quot;page&quot;</span>, <span class=\"number\">1</span>))</span><br><span class=\"line\">        <span class=\"comment\"># 每页展示的条数</span></span><br><span class=\"line\">        size = <span class=\"built_in\">int</span>(request.GET.get(<span class=\"string\">&quot;size&quot;</span>, <span class=\"number\">1</span>))</span><br><span class=\"line\">        <span class=\"comment\"># 开始数据切片的位置</span></span><br><span class=\"line\">        data_start = (page - <span class=\"number\">1</span>) * size</span><br><span class=\"line\">        <span class=\"comment\"># 结束数据切片的位置</span></span><br><span class=\"line\">        data_end = page * size</span><br><span class=\"line\">        <span class=\"comment\"># 查询</span></span><br><span class=\"line\">        course_list = Course.objects.<span class=\"built_in\">all</span>()[data_start:data_end]</span><br><span class=\"line\">        <span class=\"comment\"># 数据总条数</span></span><br><span class=\"line\">        data_count = Course.objects.count()</span><br><span class=\"line\">        <span class=\"comment\"># 序列化查询集</span></span><br><span class=\"line\">        course_list_ser = CourseSer(course_list, many=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&quot;total&quot;</span>: data_count, <span class=\"string\">&quot;data&quot;</span>: course_list_ser.data&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>前端使用 vant 分页组件，使用双向绑定将后端接口中需要的参数传过去</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;main-content-wrapper&quot;</span>&gt;</span><br><span class=\"line\">      &lt;van-grid :gutter=<span class=\"string\">&quot;10&quot;</span>&gt;</span><br><span class=\"line\">        &lt;van-grid-item</span><br><span class=\"line\">          v-<span class=\"keyword\">for</span>=<span class=\"string\">&quot;(item, index) in data_list&quot;</span></span><br><span class=\"line\">          :key=<span class=\"string\">&quot;index&quot;</span></span><br><span class=\"line\">          :icon=<span class=\"string\">&quot;&#x27;http://127.0.0.1:8000/static/upload/&#x27; + item.cover&quot;</span></span><br><span class=\"line\">          :text=<span class=\"string\">&quot;item.title&quot;</span></span><br><span class=\"line\">          :to=<span class=\"string\">&quot;&#x27;/coursedetail?cid=&#x27; + item.id&quot;</span></span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;/van-grid&gt;</span><br><span class=\"line\">      &lt;!-- 分页控件 --&gt;</span><br><span class=\"line\">      &lt;van-pagination</span><br><span class=\"line\">        v-model=<span class=\"string\">&quot;page&quot;</span></span><br><span class=\"line\">        :total-items=<span class=\"string\">&quot;total&quot;</span></span><br><span class=\"line\">        :items-per-page=<span class=\"string\">&quot;size&quot;</span></span><br><span class=\"line\">        @change=<span class=\"string\">&quot;get_data&quot;</span></span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">      &lt;van-cell-group&gt;</span><br><span class=\"line\">        &lt;van-field</span><br><span class=\"line\">          v-model=<span class=\"string\">&quot;digit&quot;</span></span><br><span class=\"line\">          type=<span class=\"string\">&quot;digit&quot;</span></span><br><span class=\"line\">          label=<span class=\"string\">&quot;跳转到&quot;</span></span><br><span class=\"line\">          placeholder=<span class=\"string\">&quot;请输入目标页码&quot;</span></span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">        &lt;van-button type=<span class=\"string\">&quot;primary&quot;</span> @click=<span class=\"string\">&quot;get_digit&quot;</span>&gt;前往&lt;/van-button&gt;</span><br><span class=\"line\">      &lt;/van-cell-group&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      data_list: [],</span><br><span class=\"line\">      page: <span class=\"number\">1</span>,</span><br><span class=\"line\">      size: <span class=\"number\">3</span>,</span><br><span class=\"line\">      total: <span class=\"number\">0</span>,</span><br><span class=\"line\">      digit: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">      photo: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">      title: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.get_data();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get_data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.axios</span><br><span class=\"line\">        .get(<span class=\"string\">&quot;http://localhost:8000/courselist/&quot;</span>, &#123;</span><br><span class=\"line\">          params: &#123; <span class=\"attr\">page</span>: <span class=\"built_in\">this</span>.page,<span class=\"attr\">size</span>:<span class=\"built_in\">this</span>.size&#125;,</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(res.data);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.data_list = res.data.data;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.total = res.data.total;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get_digit</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.axios</span><br><span class=\"line\">        .get(<span class=\"string\">&quot;http://localhost:8000/courselist/&quot;</span>, &#123;</span><br><span class=\"line\">          params: &#123; <span class=\"attr\">page</span>: <span class=\"built_in\">this</span>.page,<span class=\"attr\">size</span>:<span class=\"built_in\">this</span>.size &#125;,</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(res.data);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.page = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">this</span>.digit)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/01/19/%E9%80%92%E5%BD%92%E6%97%A0%E9%99%90%E8%AF%BE%E7%A8%8B%E5%88%86%E7%B1%BB/",
            "url": "https://github.com/chenxuwang51/blog/2021/01/19/%E9%80%92%E5%BD%92%E6%97%A0%E9%99%90%E8%AF%BE%E7%A8%8B%E5%88%86%E7%B1%BB/",
            "title": "递归无限课程分类",
            "date_published": "2021-01-19T12:44:00.000Z",
            "content_html": "<!-- -->\n<span id=\"more\"></span>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 构造课程分类层级关系（树）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_tree</span>(<span class=\"params\">data</span>):</span></span><br><span class=\"line\">    lists = []</span><br><span class=\"line\">    tree = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        tree[item[<span class=\"string\">&quot;id&quot;</span>]] = item</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> i[<span class=\"string\">&quot;pid&quot;</span>]:</span><br><span class=\"line\">            lists.append(tree[i[<span class=\"string\">&quot;id&quot;</span>]])</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            parent_id = i[<span class=\"string\">&quot;pid&quot;</span>]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;children&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> tree[parent_id]:</span><br><span class=\"line\">                tree[parent_id][<span class=\"string\">&quot;children&quot;</span>] = []</span><br><span class=\"line\">            tree[parent_id][<span class=\"string\">&quot;children&quot;</span>].append(tree[i[<span class=\"string\">&quot;id&quot;</span>]])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lists</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>将所有课程序列化，传给上面的树</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取课程分类</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cate</span>(<span class=\"params\">request</span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># 建立查询游标</span></span><br><span class=\"line\">    cursor = connection.cursor()</span><br><span class=\"line\">    <span class=\"comment\"># 执行sql</span></span><br><span class=\"line\">    cursor.execute(</span><br><span class=\"line\">        <span class=\"string\">&quot;SELECT * from cate&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"comment\"># 获取结果查询集</span></span><br><span class=\"line\">    <span class=\"comment\"># res = cursor.fetchall()</span></span><br><span class=\"line\">    res = dictfetchall(cursor)</span><br><span class=\"line\">    res = get_tree(res)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(</span><br><span class=\"line\">        json.dumps(res, indent=<span class=\"number\">4</span>, ensure_ascii=<span class=\"literal\">False</span>), content_type=<span class=\"string\">&quot;application/json&quot;</span></span><br><span class=\"line\">    )</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>前端使用组件传值方式构建页面（父组件向子组件传值）</p>\n</li>\n<li>\n<p>父组件中获取后端的课程数据通过使用子组件标签传给子组件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;mycate :data=<span class=\"string\">&quot;data&quot;</span> /&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> mycate <span class=\"keyword\">from</span> <span class=\"string\">&quot;./mycate.vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  components: &#123; mycate &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      data: &#123;&#125;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.get_data();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get_data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.axios.get(<span class=\"string\">&quot;http://127.0.0.1:8000/get_cate/&quot;</span>)</span><br><span class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res.data);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> mytree = &#123; <span class=\"attr\">id</span>: <span class=\"number\">0</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;&quot;</span> &#125;;</span><br><span class=\"line\">        mytree[<span class=\"string\">&quot;children&quot;</span>] = res.data;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = mytree;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .catch(<span class=\"function\"><span class=\"params\">err</span>=&gt;</span>&#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>子组件接受父组件传过来的数据，进行展示</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;li&gt;</span><br><span class=\"line\">    &lt;div &gt;&#123;&#123; data.name &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">      &lt;ul v-<span class=\"keyword\">if</span>=<span class=\"string\">&quot;data.children &amp;&amp; data.children.length &gt; 0&quot;</span>&gt;</span><br><span class=\"line\">        &lt;mycate v-<span class=\"keyword\">for</span>=<span class=\"string\">&quot;child in data.children&quot;</span> :key=<span class=\"string\">&quot;child.id&quot;</span> :data=<span class=\"string\">&quot;child&quot;</span> /&gt;</span><br><span class=\"line\">      &lt;/ul&gt;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">&quot;mycate&quot;</span>,</span><br><span class=\"line\">  props: [<span class=\"string\">&quot;data&quot;</span>],</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;&#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/01/18/1-18%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "https://github.com/chenxuwang51/blog/2021/01/18/1-18%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "位运算算法基础（二进制）",
            "date_published": "2021-01-18T07:08:10.000Z",
            "content_html": "<!--  -->\n<span id=\"more\"></span>\n<ul>\n<li>\n<p>十进制：逢十进一，二进制：由 0 和 1 组成，逢二进一</p>\n</li>\n<li>\n<p>二进制（binary）在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOTUlQjAlRTUlQUQlQTYvMTA3MDM3\">数学</span>和<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOTUlQjAlRTUlQUQlOTclRTclOTQlQjUlRTglQjclQUYvMTcwNQ==\">数字电路</span>中指以 2 为基数的记数系统，以 2 为基数代表系统是二进位制的。这一系统中，通常用两个不同的符号 0（代表零）和 1（代表一）来表示 [1] 。数字<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclOTQlQjUlRTUlQUQlOTAlRTclOTQlQjUlRTglQjclQUYvMjU2NjU4Ng==\">电子电路</span>中，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklODAlQkIlRTglQkUlOTElRTklOTclQTgvNTE0MTE1NQ==\">逻辑门</span>的实现直接应用了二进制，因此现代的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTglQUUlQTElRTclQUUlOTclRTYlOUMlQkEvMTQwMzM4\">计算机</span>和依赖计算机的设备里都用到二进制。</p>\n</li>\n<li>\n<p>用栈实现输入十进制转换成二进制结果</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 栈</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        self.items = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 判断是否为空</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_empty</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.items == []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 入栈</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">push</span>(<span class=\"params\">self, item</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.items.append(item)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 出栈</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pop</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.items.pop()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">transform</span>(<span class=\"params\">num</span>):</span></span><br><span class=\"line\">    stack = Stack()</span><br><span class=\"line\">    <span class=\"keyword\">while</span> num != <span class=\"number\">0</span>:</span><br><span class=\"line\">        res = num % <span class=\"number\">2</span></span><br><span class=\"line\">        num = <span class=\"built_in\">int</span>(num / <span class=\"number\">2</span>)</span><br><span class=\"line\">        stack.push(res)</span><br><span class=\"line\">    s = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">not</span> stack.is_empty():</span><br><span class=\"line\">        s += <span class=\"built_in\">str</span>(stack.pop())</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\"><span class=\"built_in\">print</span>(transform(<span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;输入十进制数字&gt;&gt;&gt;&quot;</span>))))</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>位运算权限控制</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user = <span class=\"number\">0b111</span>  <span class=\"comment\"># 111分别代表了3个节点（个人中心，修改密码，上传头像），说明该用户拥有权限表中的三种权限</span></span><br><span class=\"line\">permission = <span class=\"number\">0b001</span>  <span class=\"comment\"># 对应了上传头像权限</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写一个装饰器，判断用户是否拥有permission中的权限</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">my_decorator</span>(<span class=\"params\">func</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wrapper</span>(<span class=\"params\">*args</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(args)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> user &amp; args[<span class=\"number\">0</span>]:</span><br><span class=\"line\">            func(*args)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;无权限&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上传头像</span></span><br><span class=\"line\"><span class=\"meta\">@my_decorator</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">upload_img</span>(<span class=\"params\">name</span>):</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;上传头像过程&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(upload_img(permission))</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/01/15/day07-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "https://github.com/chenxuwang51/blog/2021/01/15/day07-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "django文件上传",
            "date_published": "2021-01-15T13:27:49.000Z",
            "content_html": "<!--  -->\n<span id=\"more\"></span>\n<h1 id=\"文件上传图片\"><a class=\"markdownIt-Anchor\" href=\"#文件上传图片\">#</a> 文件上传（图片）</h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试文件上传</span></span><br><span class=\"line\"><span class=\"comment\"># 在元祖内，open前可以定义上传文件的默认文件名,例：&quot;wenjian.png&quot;,</span></span><br><span class=\"line\"><span class=\"comment\"># open后的参数为：目标文件地址，写入方式</span></span><br><span class=\"line\"><span class=\"comment\"># post方法中连接后端接口</span></span><br><span class=\"line\">files = &#123;<span class=\"string\">&quot;file&quot;</span>: (<span class=\"built_in\">open</span>(<span class=\"string\">&quot;G:/头像壁纸/微信传输/xiao.jpg&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>))&#125;</span><br><span class=\"line\">res = requests.post(<span class=\"string\">&quot;http://127.0.0.1:8000/upload/&quot;</span>, files=files)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(res.text)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 文件上传接口</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Uploader</span>(<span class=\"params\">View</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 接受参数</span></span><br><span class=\"line\">        file = request.FILES.get(<span class=\"string\">&quot;file&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 写文件，UPLOAD_ROOT为自定义的上传路径</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(os.path.join(UPLOAD_ROOT, <span class=\"string\">&quot;&quot;</span>, file.name), <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> chunk <span class=\"keyword\">in</span> file.chunks():</span><br><span class=\"line\">                f.write(chunk)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> HttpResponse(</span><br><span class=\"line\">            json.dumps(&#123;<span class=\"string\">&quot;filename&quot;</span>: file.name&#125;, ensure_ascii=<span class=\"literal\">False</span>), content_type=<span class=\"string\">&quot;application/json&quot;</span></span><br><span class=\"line\">        )</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/01/14/JWT/",
            "url": "https://github.com/chenxuwang51/blog/2021/01/14/JWT/",
            "title": "JWT",
            "date_published": "2021-01-14T11:08:46.000Z",
            "content_html": "<!--  -->\n<span id=\"more\"></span>\n<h1 id=\"jwt\"><a class=\"markdownIt-Anchor\" href=\"#jwt\">#</a> JWT</h1>\n<ul>\n<li>\n<p>使用 Django 中的 pyjwt 包</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入jwt模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> jwt</span><br><span class=\"line\"><span class=\"comment\"># 导入datetime模块，用于设置有效时间</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 载荷信息</span></span><br><span class=\"line\">play_load = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;exp&quot;</span>: <span class=\"built_in\">int</span>((datetime.datetime.now() + datetime.timedelta(minutes=<span class=\"number\">5</span>)).timestamp()),</span><br><span class=\"line\">    <span class=\"string\">&quot;data&quot;</span>: &#123;<span class=\"string\">&quot;uid&quot;</span>: <span class=\"number\">25</span>, <span class=\"string\">&quot;username&quot;</span>: <span class=\"string\">&quot;用户甲&quot;</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编码，play_load为载荷信息,key为解密的密钥，可自定义，algorithm为算法</span></span><br><span class=\"line\">encode_jwt = jwt.encode(play_load, key=<span class=\"string\">&quot;123&quot;</span>, algorithm=<span class=\"string\">&quot;HS256&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 打印查看生成的token及其数据类型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(encode_jwt)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(encode_jwt))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 强转，可以用decode方法，或者使用str强转</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(encode_jwt.decode()))</span><br><span class=\"line\">encode_str_jwt = <span class=\"built_in\">str</span>(encode_jwt, <span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(encode_str_jwt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分为三部分：第一个.前是头部信息， 第一个.后和第二个.前的是载荷信息， 第二个.后是密钥信息</span></span><br><span class=\"line\">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjI1LCJ1c2VybmFtZSI6Ilx1NzUyOFx1NjIzN1x1NzUzMiJ9.vgEDgcok7xFqzlqijlCbM9nqd2sSFnL-iO6tEg0un6I</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解密</span></span><br><span class=\"line\">decode_jwt = jwt.decode(</span><br><span class=\"line\">    encode_str_jwt,</span><br><span class=\"line\">    key=<span class=\"string\">&quot;123&quot;</span>, algorithms=<span class=\"string\">&quot;HS256&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(decode_jwt)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(decode_jwt[<span class=\"string\">&quot;data&quot;</span>][<span class=\"string\">&quot;username&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解密，这里将play_load换上面生成的JWT，因为会设置有效时间，如果任然写play_load的话，会直接生成新的jwt，无法检验有效性</span></span><br><span class=\"line\">decode_jwt = jwt.decode(</span><br><span class=\"line\">  <span class=\"string\">&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MTA1OTAzNTEsImRhdGEiOnsidWlkIjoyNSwidXNlcm5hbWUiOiJcdTc1MjhcdTYyMzdcdTc1MzIifX0.OfHNnRxAZqki4OBgVhJAnh9jvGPOb5JAvirrOCTzmxI&quot;</span>,</span><br><span class=\"line\">    key=<span class=\"string\">&quot;123&quot;</span>, algorithms=<span class=\"string\">&quot;HS256&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(decode_jwt)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/01/13/sms-code/",
            "url": "https://github.com/chenxuwang51/blog/2021/01/13/sms-code/",
            "title": "图片验证码",
            "date_published": "2021-01-13T12:15:53.000Z",
            "content_html": "<!--  -->\n<span id=\"more\"></span>\n<h1 id=\"img_code\"><a class=\"markdownIt-Anchor\" href=\"#img_code\">#</a> img_code</h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义验证码类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyImgCode</span>(<span class=\"params\">View</span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># 内置类方法，定义随机颜色</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_random_color</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        R = random.randrange(<span class=\"number\">255</span>)</span><br><span class=\"line\">        G = random.randrange(<span class=\"number\">255</span>)</span><br><span class=\"line\">        B = random.randrange(<span class=\"number\">255</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (R, G, B)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 定义画布,赋值宽，高</span></span><br><span class=\"line\">        img_size = (<span class=\"number\">120</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 定义图像对象</span></span><br><span class=\"line\">        image = Image.new(<span class=\"string\">&quot;RGB&quot;</span>, img_size, <span class=\"string\">&quot;white&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 定义画笔</span></span><br><span class=\"line\">        draw = ImageDraw.Draw(image, <span class=\"string\">&quot;RGB&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 定义字符串</span></span><br><span class=\"line\">        source = <span class=\"string\">&quot;0123456789abcdefghijklmnobqrstuvwxyz&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 定义容器</span></span><br><span class=\"line\">        code_str = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">            <span class=\"comment\"># 获取字符颜色</span></span><br><span class=\"line\">            text_color = self.get_random_color()</span><br><span class=\"line\">            <span class=\"comment\"># 获取随机字符</span></span><br><span class=\"line\">            tmp_num = random.randrange(<span class=\"built_in\">len</span>(source))</span><br><span class=\"line\">            random_str = source[tmp_num]</span><br><span class=\"line\">            <span class=\"comment\"># 将随机字符串添加到容器中</span></span><br><span class=\"line\">            code_str += random_str</span><br><span class=\"line\">            <span class=\"comment\"># 将字符画到画布上，坐标，字符串，文本颜色</span></span><br><span class=\"line\">            draw.text((<span class=\"number\">10</span> + <span class=\"number\">30</span> * i, <span class=\"number\">20</span>), random_str, text_color)</span><br><span class=\"line\">        <span class=\"comment\"># 使用io获取一个缓存区</span></span><br><span class=\"line\">        buf = io.BytesIO()</span><br><span class=\"line\">        <span class=\"comment\"># 将图片保存到缓存区</span></span><br><span class=\"line\">        image.save(buf, <span class=\"string\">&quot;png&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 保存验证码</span></span><br><span class=\"line\">        request.session[<span class=\"string\">&quot;code&quot;</span>] = code_str</span><br><span class=\"line\">        <span class=\"comment\"># 返回响应</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> HttpResponse(buf.getvalue(), <span class=\"string\">&quot;image/png&quot;</span>)</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/01/13/selenium/",
            "url": "https://github.com/chenxuwang51/blog/2021/01/13/selenium/",
            "title": "selenium",
            "date_published": "2021-01-13T03:04:28.000Z",
            "content_html": "<!--  -->\n<span id=\"more\"></span>\n<h1 id=\"自动测试脚本\"><a class=\"markdownIt-Anchor\" href=\"#自动测试脚本\">#</a> 自动测试脚本</h1>\n<ul>\n<li>\n<p>Django 下载 selenium  3.141.0 依赖包</p>\n</li>\n<li>\n<p>查看当前谷歌浏览器版本</p>\n</li>\n</ul>\n<img data-src=\"F:\\学习\\重修七月\\截图\\查看谷歌版本.png\" style=\"zoom: 50%;\" />\n<ul>\n<li>下载对应谷歌版本号的 selenium 驱动：       <span class=\"exturl\" data-url=\"aHR0cDovL25wbS50YW9iYW8ub3JnL21pcnJvcnMvY2hyb21lZHJpdmVyLw==\">http://npm.taobao.org/mirrors/chromedriver/</span>       解压后方在谷歌浏览器应用目录下</li>\n</ul>\n<h3 id=\"完整代码\"><a class=\"markdownIt-Anchor\" href=\"#完整代码\">#</a> 完整代码</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver  <span class=\"comment\"># 导入网页驱动</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver <span class=\"keyword\">import</span> ActionChains  <span class=\"comment\"># 导入动作链</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成注册浏览器对象（注意window中文件路径斜杠附为\\，转译的意识，要换成/正斜杠）</span></span><br><span class=\"line\">register_browser = webdriver.Chrome(<span class=\"string\">&quot;C:/Program Files (x86)/Google/Chrome/Application/chromedriver.exe&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 打开注册页面</span></span><br><span class=\"line\">register_browser.get(<span class=\"string\">&quot;http://localhost:8080/myregister&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 元素选择</span></span><br><span class=\"line\">register_browser.find_elements_by_tag_name(<span class=\"string\">&quot;input&quot;</span>)[<span class=\"number\">1</span>].send_keys(<span class=\"string\">&quot;用户乙&quot;</span>)</span><br><span class=\"line\">register_browser.find_elements_by_tag_name(<span class=\"string\">&quot;input&quot;</span>)[<span class=\"number\">2</span>].send_keys(<span class=\"string\">&quot;222&quot;</span>)</span><br><span class=\"line\">register_browser.find_elements_by_tag_name(<span class=\"string\">&quot;input&quot;</span>)[<span class=\"number\">3</span>].send_keys(<span class=\"string\">&quot;222&quot;</span>)</span><br><span class=\"line\">register_browser.find_elements_by_tag_name(<span class=\"string\">&quot;input&quot;</span>)[<span class=\"number\">4</span>].send_keys(<span class=\"string\">&quot;17623235186&quot;</span>)</span><br><span class=\"line\">register_browser.find_elements_by_tag_name(<span class=\"string\">&quot;input&quot;</span>)[<span class=\"number\">5</span>].send_keys(<span class=\"string\">&quot;yhy@163.com&quot;</span>)</span><br><span class=\"line\">register_browser.find_elements_by_tag_name(<span class=\"string\">&quot;input&quot;</span>)[<span class=\"number\">6</span>].send_keys(<span class=\"string\">&quot;女&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 点击注册</span></span><br><span class=\"line\">register_browser.find_element_by_class_name(<span class=\"string\">&quot;van-button--primary&quot;</span>).click()</span><br><span class=\"line\"></span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成登录浏览器对象</span></span><br><span class=\"line\">login_browser = webdriver.Chrome(<span class=\"string\">&quot;C:/Program Files (x86)/Google/Chrome/Application/chromedriver.exe&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 打开登录页面</span></span><br><span class=\"line\">login_browser.get(<span class=\"string\">&quot;http://localhost:8080/mylogin&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 元素选择</span></span><br><span class=\"line\">login_browser.find_elements_by_tag_name(<span class=\"string\">&quot;input&quot;</span>)[<span class=\"number\">1</span>].send_keys(<span class=\"string\">&quot;17623235186&quot;</span>)  <span class=\"comment\"># 找到用户名的input框</span></span><br><span class=\"line\">login_browser.find_elements_by_tag_name(<span class=\"string\">&quot;input&quot;</span>)[<span class=\"number\">2</span>].send_keys(<span class=\"string\">&quot;222&quot;</span>)  <span class=\"comment\"># 找到密码的input框</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拖拽动作</span></span><br><span class=\"line\">action = ActionChains(login_browser)</span><br><span class=\"line\"><span class=\"comment\"># 获取拖拽对象的标签</span></span><br><span class=\"line\">button = login_browser.find_element_by_class_name(<span class=\"string\">&quot;dv_handler&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 按住标签不松，拖动</span></span><br><span class=\"line\">action.click_and_hold(button).perform()</span><br><span class=\"line\">action.reset_actions()</span><br><span class=\"line\">action.move_by_offset(<span class=\"number\">280</span>, <span class=\"number\">0</span>).perform()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 点击登录</span></span><br><span class=\"line\">login_browser.find_element_by_class_name(<span class=\"string\">&quot;van-button--primary&quot;</span>).click()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/01/12/1-12/",
            "url": "https://github.com/chenxuwang51/blog/2021/01/12/1-12/",
            "title": "python功能测试接口及用户的多方式登录",
            "date_published": "2021-01-12T03:58:20.000Z",
            "content_html": "<!--  -->\n<span id=\"more\"></span>\n<h3 id=\"测试脚本\"><a class=\"markdownIt-Anchor\" href=\"#测试脚本\">#</a> 测试脚本</h3>\n<!--多用于测试接口-->\n<ul>\n<li>\n<p>新建.py 文件，并导入 requests 如下图：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">data = &#123;<span class=\"string\">&quot;username&quot;</span>: <span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;password&quot;</span>: <span class=\"string\">&quot;11&quot;</span>&#125;</span><br><span class=\"line\">res = requests.post(<span class=\"string\">&quot;http://127.0.0.1:8000/register/&quot;</span>, data=data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(res.text)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"多方式登录\"><a class=\"markdownIt-Anchor\" href=\"#多方式登录\">#</a> 多方式登录</h3>\n<ul>\n<li>\n<p>用户可使用多种方式进行登录，后端接口中要判断用户输入的是哪一种方式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 用户登录</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Login</span>(<span class=\"params\">APIView</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self, request</span>):</span></span><br><span class=\"line\">        username = request.data.get(<span class=\"string\">&quot;username&quot;</span>, <span class=\"literal\">None</span>)  <span class=\"comment\"># 接受用户输入的用户名</span></span><br><span class=\"line\">        phone = request.data.get(<span class=\"string\">&quot;phone&quot;</span>, <span class=\"literal\">None</span>)  <span class=\"comment\"># 接受用户输入的手机号</span></span><br><span class=\"line\">        email = request.data.get(<span class=\"string\">&quot;email&quot;</span>, <span class=\"literal\">None</span>)  <span class=\"comment\"># 接受用户输入的邮箱</span></span><br><span class=\"line\">        password = request.data.get(<span class=\"string\">&quot;password&quot;</span>, <span class=\"literal\">None</span>)  <span class=\"comment\"># 接受用户输入的密码</span></span><br><span class=\"line\">        active = request.data.get(<span class=\"string\">&quot;active&quot;</span>, <span class=\"literal\">None</span>)  <span class=\"comment\"># 前端van-tabs中的方式，0为默认的用户名登录，1是手机号，2是邮箱</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(username, phone, email, password, active, <span class=\"string\">&#x27;-------------&#x27;</span>)  <span class=\"comment\"># 打印查看后端是否接受到数据</span></span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"keyword\">if</span> active == <span class=\"number\">1</span>:  <span class=\"comment\"># 判断用户选择的登录方式，如果方式值为1，则用户选择手机号登录</span></span><br><span class=\"line\">            user = User.objects.<span class=\"built_in\">filter</span>(phone=phone).first()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> active == <span class=\"number\">2</span>:  <span class=\"comment\"># 如果方式值为2，则用户选择邮箱登录</span></span><br><span class=\"line\">            user = User.objects.<span class=\"built_in\">filter</span>(email=email).first()</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            user = User.objects.<span class=\"built_in\">filter</span>(username=username).first()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> user <span class=\"keyword\">and</span> make_password(user.password, <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">1000</span>, <span class=\"number\">9999</span>))):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;登录成功&quot;</span>, <span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">200</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> User.objects.<span class=\"built_in\">filter</span>(username=username).first():</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;用户不存在 请先注册&quot;</span>, <span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">404</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(&#123;<span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;用户名或密码错误&quot;</span>, <span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">400</span>&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://github.com/chenxuwang51/blog/2021/01/12/hello-world/",
            "url": "https://github.com/chenxuwang51/blog/2021/01/12/hello-world/",
            "title": "Hello World",
            "date_published": "2021-01-12T03:54:26.019Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<!--  -->\n<span id=\"more\"></span>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}